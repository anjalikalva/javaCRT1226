find the rotating count in rotated sorted array:
given the array arr[] of size N having distinct numbers sorted in increasing order and the array has been right rotated (i.e the last element will be cyclically shifted to the starting position of array)k number of times the task is to findthe value ofk
Example:
n=6
intput arr[]={15,18,2,3,6,12}
output:2
Explaination:initial array must be{2,3,6,12,15,18}
we get the given array after rotating the initial array twice

n=6
input arr[]=(7,9,11,12,5}
output:4
input arr[]={7,9,11,12,15}
output:0
 import java.util.*;
class Rotatedc
{
public static void main(String[] args)
{
Scanner s=new Scanner(System.in);
int n=s.nextInt();
int a[]=new int[n];
int i;
for(i=0;i<n;i++)
a[i]=s.nextInt();
int r=0,t=a[0];
for(i=0;i<n;i++)
{
	if(a[i]<a[i+1])
	continue;
else
{
	r=i+1;
	break;
}
}
System.out.print(r);
}
}

C:\crt java>javac Rotatedc.java

C:\crt java>java Rotatedc
6
15 18 2 3 6 12
2            
